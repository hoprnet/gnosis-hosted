version: '3.5'

volumes:
  # directory for TLS certs and other permanent files used by caddy
  caddy-data:
  # directory for caddy configuration
  caddy-config:
  caddy-react-files:
  caddy-transaction-service-files:
  caddy-config-service-files:
  # directory for persistent transaction service data
  transaction-service-data:
  # directory for persistent config service data
  config-service-data:

services:
  lb:
    image: caddy:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:17000:17000"
      - "127.0.0.1:17001:17001"
      - "127.0.0.1:17002:17002"
    environment:
      GNOSIS_SAFE_DOMAIN: "${GNOSIS_SAFE_DOMAIN}"
    volumes:
      - "./Caddyfile.${GNOSIS_SAFE_ENVIRONMENT}:/etc/caddy/Caddyfile:ro"
      - caddy-react-files:/srv/gnosis-safe-react
      - caddy-transaction-service-files:/srv/gnosis-safe-transaction-service
      - caddy-config-service-files:/srv/gnosis-safe-config-service
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - react
      - transaction-service-web
      - config-service-web

  transaction-service-redis:
    image: redis:alpine

  transaction-service-db:
    image: postgres:alpine
    volumes:
      - transaction-service-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres

  transaction-service-worker: &transaction-service-worker
    build:
      context: ./vendor/github.com/gnosis/safe-transaction-service/
      dockerfile: ./docker/web/Dockerfile
    env_file:
      - "configs/gnosis-safe-transaction-service.env.${GNOSIS_SAFE_ENVIRONMENT}"
    depends_on:
      - transaction-service-db
      - transaction-service-redis
    command: docker/web/celery/worker/run.sh

  transaction-service-scheduler:
    <<: *transaction-service-worker
    command: docker/web/celery/scheduler/run.sh

  transaction-service-web:
    <<: *transaction-service-worker
    working_dir: /app
    ports:
      - "8888"
    volumes:
      # the folder name nginx is hard-coded in the run script
      - caddy-transaction-service-files:/nginx
    command: docker/web/run_web.sh

  client-gateway-redis:
    image: redis:alpine

  client-gateway-web:
    build:
      context: ./vendor/github.com/gnosis/safe-client-gateway/
    ports:
      - "3666"
    env_file:
      - "configs/gnosis-safe-client-gateway.env.${GNOSIS_SAFE_ENVIRONMENT}"
    depends_on:
      - client-gateway-redis

  react:
    build:
      context: ./docker-gnosis-safe-react
      args:
        - REACT_APP_NETWORK=$REACT_APP_NETWORK
        - REACT_APP_IPFS_GATEWAY=$REACT_APP_IPFS_GATEWAY
        - REACT_APP_SPENDING_LIMIT_MODULE_ADDRESS=$REACT_APP_SPENDING_LIMIT_MODULE_ADDRESS
        - REACT_APP_SAFE_URL=$REACT_APP_SAFE_URL
        - REACT_APP_CLIENT_GATEWAY_URL=$REACT_APP_CLIENT_GATEWAY_URL
        - REACT_APP_TRANSACTION_SERVICE_URL=$REACT_APP_TRANSACTION_SERVICE_URL
    volumes:
      - caddy-react-files:/app/build

  config-service-db:
    image: postgres:alpine
    volumes:
      - config-service-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres

  config-service-web:
    build:
      context: ./vendor/github.com/gnosis/safe-config-service/
    env_file:
      - "configs/gnosis-safe-config-service.env.${GNOSIS_SAFE_ENVIRONMENT}"
    volumes:
      - caddy-config-service-files:/nginx
    depends_on:
      - config-service-db
