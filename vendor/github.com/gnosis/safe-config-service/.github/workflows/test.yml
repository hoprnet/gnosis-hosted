name: "CI"

on: push

jobs:
  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: python -m pip install flake8
      - name: flake8
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: flake8
          run: flake8

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: python -m pip install isort
      - name: isort
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: isort
          run: isort --check --profile black src/

  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: python -m pip install black
      - name: black
        run: black --check src/

  django-check:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      SECRET_KEY: 'insecure_key_for_dev'
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: Check pending migrations
        run: python src/manage.py makemigrations --check --dry-run
      - name: Run migrations
        run: python src/manage.py migrate
      - name: Django System Check
        run: python src/manage.py check
      - name: Run tests with coverage
        run: coverage run --source=src/ -m pytest src
      - name: Upload coverage
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
