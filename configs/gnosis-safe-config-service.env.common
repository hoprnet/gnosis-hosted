# Default values are optimized for production to avoid having to configure
# much in production.
#
# However it should be easy to get going in development too. If you see an
# uncommented option that means it's either mandatory to set it or it's being
# overwritten in development to make your life easier.

# In development avoid writing out bytecode to __pycache__ directories.
PYTHONDONTWRITEBYTECODE=true

# This should never be set to true in production but it should be enabled in dev.
DEBUG=false

# Root log level (default is INFO)
# Possible values are DEBUG | INFO | WARNING | ERROR | CRITICAL
ROOT_LOG_LEVEL=INFO

# The bind port for gunicorn.
#
# Be warned that if you change this value you'll need to change 8000 in both
# your Dockerfile and in a few spots in docker-compose.yml due to the nature of
# how this value can be set (Docker Compose doesn't support nested ENV vars).
GUNICORN_BIND_PORT=8000

# Docker Nginx Volume Root
DOCKER_NGINX_VOLUME_ROOT=/nginx

# The bind socket for gunicorn
GUNICORN_BIND_SOCKET=unix:${DOCKER_NGINX_VOLUME_ROOT}/gunicorn.socket

# The port exposed to the host by the nginx image.
NGINX_HOST_PORT=8080

# A directory where the result of executing envsubst is output (default: /etc/nginx/conf.d)
# Used by the nginx docker image in the templating system in order to use the environment variables set
NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/

# Should the Webpack watcher use polling? Not all Docker hosts support inotify.
# If you find your assets aren't updating in development then set this to true.
#WEBPACK_WATCHER_POLL=false

# You'll always want to set the POSTGRES_USER and POSTGRES_PASSWORD since the
# postgres Docker image uses them for its default database user and password.
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_NAME=postgres
POSTGRES_HOST=config-service-db
POSTGRES_PORT=5432

# What volume path should be used? In development we want to volume mount
# everything so we can develop our code without rebuilding our Docker images.
# DOCKER_WEB_VOLUME=.:/app

# Restart workers when code changes.
# This setting is intended for development. It will cause workers to be restarted whenever application code changes.
GUNICORN_WEB_RELOAD=false

# The Client Gateway URL. This is for triggering webhooks to invalidate its cache for example
CGW_URL=http://client-gateway-web:3666

# What CPU and memory constraints will be added to your services? When left at
# 0, they will happily use as much as needed.
#DOCKER_POSTGRES_CPUS=0
#DOCKER_POSTGRES_MEMORY=0
#DOCKER_REDIS_CPUS=0
#DOCKER_REDIS_MEMORY=0
#DOCKER_WEB_CPUS=0
#DOCKER_WEB_MEMORY=0
#DOCKER_WORKER_CPUS=0
#DOCKER_WORKER_MEMORY=0
